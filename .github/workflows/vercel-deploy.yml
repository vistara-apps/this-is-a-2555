name: Build and Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'
          
      - name: Install dependencies
        run: npm install --legacy-peer-deps
        
      - name: Build application
        run: npm run build
        env:
          NODE_OPTIONS: --max-old-space-size=4096
          
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: dist/
          retention-days: 7
          
  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: ${{ secrets.VERCEL_TOKEN != '' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-files
          path: dist/
          
      - name: Deploy to Vercel (Production)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./
          vercel-args: '--prod'
          
      - name: Deploy to Vercel (Preview)
        id: vercel-deployment
        if: github.event_name == 'pull_request'
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./
          
      - name: Comment on PR
        if: github.event_name == 'pull_request' && steps.vercel-deployment.outputs.preview-url
        uses: actions/github-script@v7
        with:
          script: |
            const { issue: { number: issue_number }, repo: { owner, repo } } = context;
            github.rest.issues.createComment({
              issue_number,
              owner,
              repo,
              body: `üöÄ **Preview Deployment Ready!**
              
              üì± **URL:** ${{ steps.vercel-deployment.outputs.preview-url }}
              
              This preview will be automatically updated when you push new commits to this PR.`
            });
            
  build-status:
    runs-on: ubuntu-latest
    needs: build
    if: always()
    steps:
      - name: Build Success Comment
        if: github.event_name == 'pull_request' && needs.build.result == 'success'
        uses: actions/github-script@v7
        with:
          script: |
            const { issue: { number: issue_number }, repo: { owner, repo } } = context;
            github.rest.issues.createComment({
              issue_number,
              owner,
              repo,
              body: `‚úÖ **Build Successful!**
              
              The Next.js application built successfully with no errors.
              
              üì¶ Build artifacts are available for download.
              ${process.env.VERCEL_TOKEN ? '' : '‚ö†Ô∏è Vercel deployment skipped - secrets not configured.'}`
            });
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          
      - name: Build Failure Comment
        if: github.event_name == 'pull_request' && needs.build.result == 'failure'
        uses: actions/github-script@v7
        with:
          script: |
            const { issue: { number: issue_number }, repo: { owner, repo } } = context;
            github.rest.issues.createComment({
              issue_number,
              owner,
              repo,
              body: `‚ùå **Build Failed!**
              
              The Next.js application failed to build. Please check the logs for details.
              
              [View Build Logs](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})`
            });
